name: Create and publish a Docker image

on:
  push:
    branches:
      - "master"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           pip install pylint
           pip install python-dotenv
           pip install googletrans==4.0.0rc1
           pip install discord
      - name: Analysing the code with pylint
        run: |
          pylint --fail-under=2 $(git ls-files '*.py')

  release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      newVersion: ${{ steps.bashrelease.outputs.newVersion }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm install
      - run: release.sh
        id: bashrelease
        shell: bash

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.release.outputs.newVersion }},${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
